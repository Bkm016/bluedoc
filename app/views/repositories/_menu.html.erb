<% content_for :subnav do %>
<div class="repo-heading">
  <div class="container">
    <div class="heading clearfix">
      <div class="row clearfix">
        <div class="repo-actions float-right">
          <%= action_button_tag(@repository, :watch, icon: "watch", with_count: true) %>
          <%= action_button_tag(@repository, :star, with_count: true) %>
          <% if can? :create_doc, @repository %>
            <%= link_to icon_tag("doc", label: t(".New Doc")), new_user_repository_doc_path(@user, @repository), class: "btn btn-sm btn-create-doc btn-primary", data: { turbolinks: false } %>
          <% end %>
        </div>
        <h1 class="text-gray-light">
          <span class="author"><%= group_name_tag @user %></span>
          /
          <span class="text-main">
            <%= repository_name_tag @repository %>
            <% if @repository.private? %>
              <span class="label label-private ml-2"><%= t(".Private") %></span>
            <% end %>
          </span>
        </h1>
      </div>
      <div class="text-gray my-3"><%= @repository.description %></div>
      <% if @repository.source? && @repository.source.provider == "gitbook" %>
      <div class="source mb-2 text-gray">
        <%= icon_tag("code-fork") %> <span class="source-url" title="<%= t(".Import from this URL") %>"><%= @repository.source_url %></span>
      </div>
      <% end %>
    </div>
  </div>

  <div class="container">
    <nav class="reponav clearfix">
      <%= render_list_items(type: :link, class: "reponav-item", active_class: "selected") do |item|
        item << link_to(t(".Summary"), @repository.to_path, class: "reponav-item")
        item << link_to(t(".Docs"), docs_user_repository_path(@user, @repository), class: "reponav-item reponav-item-docs") if @repository.has_toc? if action_name != "search"
        item << link_to(t(".Docs"), search_user_repository_path(@user, @repository), class: "reponav-item reponav-item-docs") if @repository.has_toc? if action_name == "search"
        item << link_to(t(".Settings"), user_repository_settings_path(@user, @repository), class: "reponav-item", "data-controller" => :repository_settings) if can? :update, @repository
      end %>
    </nav>
  </div>
</div>
<% end %>

<% content_for :nav_search do %>
<%= render partial: "/layouts/search_nav", locals: { props: { action: @repository.to_path("/docs/search"), scope: t(".Repository"), value: params[:q] } } %>
<% end %>
